resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final
resources:
- name: ops-manager
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: ((opsman_product_slug))
    product_version: ((opsman_product_version))
    sort_by: semver
- name: ops-manager-product-bucket
  type: s3
  source:
    endpoint: ((s3_endpoint))
    bucket: ((s3_opsman_bucket))
    regexp: (.*).ova
    access_key_id: ((s3_access_key))
    secret_access_key: ((s3_secret_key))
    disable_ssl: ((s3_disable_ssl))
- name: pas
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: ((pas_product_slug))
    product_version: ((pas_product_version))
    sort_by: semver
- name: pas-product-bucket
  type: s3
  source:
    endpoint: ((s3_endpoint))
    bucket: ((s3_pas_bucket))
    regexp: (.*).pivotal
    access_key_id: ((s3_access_key))
    secret_access_key: ((s3_secret_key))
    disable_ssl: ((s3_disable_ssl))
- name: pas-stemcell
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: ((pas_stemcell_slug))
    product_version: ((pas_stemcell_version))
    sort_by: semver
- name: pas-stemcells
  type: s3
  source:
    endpoint: ((s3_endpoint))
    bucket: ((s3_pas_bucket))
    regexp: stemcells/((s3_stemcells_regex))
    access_key_id: ((s3_access_key))
    secret_access_key: ((s3_secret_key))
    disable_ssl: ((s3_disable_ssl))
- name: pks
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: ((pks_product_slug))
    product_version: ((pks_product_version))
    sort_by: semver
- name: pks-product-bucket
  type: s3
  source:
    endpoint: ((s3_endpoint))
    bucket: ((s3_pks_bucket))
    regexp: (.*).pivotal
    access_key_id: ((s3_access_key))
    secret_access_key: ((s3_secret_key))
    disable_ssl: ((s3_disable_ssl))
- name: pks-stemcell
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: ((pks_stemcell_slug))
    product_version: ((pks_stemcell_version))
    sort_by: semver
- name: pks-stemcells
  type: s3
  source:
    endpoint: ((s3_endpoint))
    bucket: ((s3_pks_bucket))
    regexp: stemcells/((s3_stemcells_regex))
    access_key_id: ((s3_access_key))
    secret_access_key: ((s3_secret_key))
    disable_ssl: ((s3_disable_ssl))
- name: harbor
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: ((harbor_product_slug))
    product_version: ((harbor_product_version))
    sort_by: semver
- name: harbor-product-bucket
  type: s3
  source:
    endpoint: ((s3_endpoint))
    bucket: ((s3_harbor_bucket))
    regexp: (.*).pivotal
    access_key_id: ((s3_access_key))
    secret_access_key: ((s3_secret_key))
    disable_ssl: ((s3_disable_ssl))
- name: harbor-stemcell
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: ((harbor_stemcell_slug))
    product_version: ((harbor_stemcell_version))
    sort_by: semver
- name: harbor-stemcells
  type: s3
  source:
    endpoint: ((s3_endpoint))
    bucket: ((s3_harbor_bucket))
    regexp: stemcells/((s3_stemcells_regex))
    access_key_id: ((s3_access_key))
    secret_access_key: ((s3_secret_key))
    disable_ssl: ((s3_disable_ssl))
- name: platform-automation-image
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: platform-automation
    product_version: ((platform_automation_version))
    sort_by: semver
- name: platform-automation-image-product-bucket
  type: s3
  source:
    endpoint: ((s3_endpoint))
    bucket: ((s3_automation_bucket))
    regexp: ((s3_automation_image_regex))
    access_key_id: ((s3_access_key))
    secret_access_key: ((s3_secret_key))
    disable_ssl: ((s3_disable_ssl))
- name: platform-automation-tasks
  type: pivnet
  source:
    api_token: ((pivnet_token))
    product_slug: platform-automation
    product_version: ((platform_automation_version))
    sort_by: semver
- name: platform-automation-tasks-product-bucket
  type: s3
  source:
    endpoint: ((s3_endpoint))
    bucket: ((s3_automation_bucket))
    regexp: ((s3_automation_tasks_regex))
    access_key_id: ((s3_access_key))
    secret_access_key: ((s3_secret_key))
    disable_ssl: ((s3_disable_ssl))
jobs:
- name: ops-manager
  plan:
  - in_parallel:
    - get: product
      resource: ops-manager
      trigger: true
      params:
        globs:
        - '*.ova'
  - put: ops-manager-product-bucket
    params:
      file: product/*.ova
- name: pas
  plan:
  - in_parallel:
    - get: product
      resource: pas
      trigger: true
      params:
        globs:
        - cf-*.pivotal
  - put: pas-product-bucket
    params:
      file: product/cf-*.pivotal
- name: pas-stemcell
  plan:
  - in_parallel:
    - get: stemcells
      resource: pas-stemcell
      trigger: true
      params:
        globs:
        - bosh-stemcell-*-vsphere-esxi-ubuntu-xenial-go_agent.tgz
    - get: product
      resource: pas
      params:
        globs: []
      passed:
      - pas
  - put: pas-stemcells
    params:
      file: stemcells/*.tgz
- name: pks
  plan:
  - in_parallel:
    - get: product
      resource: pks
      trigger: true
      params:
        globs:
        - '*.pivotal'
  - put: pks-product-bucket
    params:
      file: product/*.pivotal
- name: pks-stemcell
  plan:
  - in_parallel:
    - get: stemcells
      resource: pks-stemcell
      trigger: true
      params:
        globs:
        - bosh-stemcell-*-vsphere-esxi-ubuntu-xenial-go_agent.tgz
    - get: product
      resource: pks
      params:
        globs: []
      passed:
      - pks
  - put: pks-stemcells
    params:
      file: stemcells/*.tgz
- name: harbor
  plan:
  - in_parallel:
    - get: product
      resource: harbor
      trigger: true
      params:
        globs:
        - '*.pivotal'
  - put: harbor-product-bucket
    params:
      file: product/*.pivotal
- name: harbor-stemcell
  plan:
  - in_parallel:
    - get: stemcells
      resource: harbor-stemcell
      trigger: true
      params:
        globs:
        - bosh-stemcell-*-vsphere-esxi-ubuntu-xenial-go_agent.tgz
    - get: product
      resource: harbor
      params:
        globs: []
      passed:
      - harbor
  - put: harbor-stemcells
    params:
      file: stemcells/*.tgz
- name: platform-automation-image
  plan:
  - in_parallel:
    - get: product
      resource: platform-automation-image
      trigger: true
      params:
        globs:
        - '*.tgz'
  - put: platform-automation-image-product-bucket
    params:
      file: product/*.tgz
- name: platform-automation-tasks
  plan:
  - in_parallel:
    - get: product
      resource: platform-automation-tasks
      trigger: true
      params:
        globs:
        - '*.zip'
  - put: platform-automation-tasks-product-bucket
    params:
      file: product/*.zip
